/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package app;

import Management.Admin;
import Management.SQLConnection;
import com.mysql.jdbc.PreparedStatement;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hp
 */
public class EvoConsult extends javax.swing.JFrame {

    //Creates new form ConsuEvolucion
    public EvoConsult() {
        initComponents();
        showTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        datosTable = new javax.swing.JTable();
        regresarButton = new javax.swing.JButton();
        editarButton = new javax.swing.JButton();
        backgroundLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        datosTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"", null},
                {"", null},
                {"", null},
                {"", null},
                {"", null},
                {"", null},
                {"", null},
                {null, null},
                {"", null}
            },
            new String [] {
                "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        datosTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(datosTable);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 490, 160));

        regresarButton.setText("Regresar");
        regresarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regresarButtonActionPerformed(evt);
            }
        });
        getContentPane().add(regresarButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 230, -1, -1));

        editarButton.setText("Editar");
        editarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarButtonActionPerformed(evt);
            }
        });
        getContentPane().add(editarButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 230, -1, -1));

        backgroundLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/white.jpg"))); // NOI18N
        getContentPane().add(backgroundLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 580, 300));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void regresarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regresarButtonActionPerformed
        Admin.returnTodosPacientes();
        dispose();
    }//GEN-LAST:event_regresarButtonActionPerformed

    private void editarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarButtonActionPerformed
        Admin.openEvoEdit();
        dispose();
    }//GEN-LAST:event_editarButtonActionPerformed

 
    
    private void showTable()
    {
        TodosPacientes tP = new TodosPacientes();
        Connection con = null;
        DefaultTableModel model;
        ResultSet rs, rs2;
        try{
            String[] titulos = {"Title 1","Title 2"};
            model = new DefaultTableModel(null, titulos);
            String datos[] = new String[8];
            con = SQLConnection.getSQLConnection();
            PreparedStatement ps = (PreparedStatement) con.prepareStatement("SELECT datos.Nombre,evolucion.* from datos INNER JOIN evolucion ON evolucion.Id_evolucion = datos.Id WHERE datos.Id = ?");
            PreparedStatement qs = (PreparedStatement) con.prepareStatement("SELECT datos.Nombre,evolucion_fecha.* from datos INNER JOIN evolucion_fecha ON evolucion_fecha.Id_EF = datos.Id WHERE datos.Id = ?");
            qs.setString(1, tP.getID());
            ps.setString(1, tP.getID());
            
            rs = ps.executeQuery();
            
            while(rs.next()){
                datosTable.setValueAt(rs.getString("MMSE"), 0, 1);
                datosTable.setValueAt(rs.getString("EDSS"), 1, 1);
                datosTable.setValueAt(rs.getString("IP"), 2, 1);
                datosTable.setValueAt(rs.getString("BICAMS"), 3, 1);
                datosTable.setValueAt(rs.getString("QHPT"), 4, 1);
                datosTable.setValueAt(rs.getString("BECK"), 5, 1);
                datosTable.setValueAt(rs.getString("RAO"), 6, 1);
                datosTable.setValueAt(rs.getString("AVC"), 7, 1);
                datosTable.setValueAt(rs.getString("MSQOL"), 8, 1);  
            }
            
            rs2 = qs.executeQuery();
                   
            while(rs2.next())
            {
                datosTable.setValueAt(rs2.getString("mmseFecha"), 0, 0);
                datosTable.setValueAt(rs2.getString("edssFecha"), 1, 0);
                datosTable.setValueAt(rs2.getString("ipFecha"), 2, 0);
                datosTable.setValueAt(rs2.getString("bicamsFecha"), 3, 0);
                datosTable.setValueAt(rs2.getString("qhptFecha"), 4, 0);
                datosTable.setValueAt(rs2.getString("beckFecha"), 5, 0);
                datosTable.setValueAt(rs2.getString("raoFecha"), 6, 0);
                datosTable.setValueAt(rs2.getString("avcFecha"), 7, 0);
                datosTable.setValueAt(rs2.getString("msqolFecha"), 8, 0);
            }
            
            con.close();
        } catch (SQLException e) {
            System.err.println(e);
        }
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EvoConsult.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EvoConsult.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EvoConsult.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EvoConsult.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EvoConsult().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel backgroundLabel;
    private javax.swing.JTable datosTable;
    private javax.swing.JButton editarButton;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton regresarButton;
    // End of variables declaration//GEN-END:variables
}
