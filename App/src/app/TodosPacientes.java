/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package app;

import Management.SQLConnection;
import Management.Admin;
import com.mysql.jdbc.PreparedStatement;
import java.awt.Image;
import java.awt.Point;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author hp
 */
public class TodosPacientes extends javax.swing.JFrame {

    DefaultTableModel model;
    ResultSet rs;
    private static int index=0;
    
    public static void setIndex(int i)
    {
        index = i;
    }
    public static int getIndex()
    {
        return index;
    }
    
    private static String nombre="";
    private static String id = "";
    public static String getNombre()
    {
        return nombre;
    }
    public static String getID()
    {
        return id;
    }
    
    
    // Creates new form todosPacientes
    public TodosPacientes() {
        initComponents();
        showTable();
        JTableHeader header = datosGeneralesTable.getTableHeader();
        header.addMouseListener(new listener());
        setImages();
        datosGeneralesTable.addMouseListener(new TableMouseListener(datosGeneralesTable));
    }
    
    private void setImages()
    {
        ClassLoader classLoader = this.getClass().getClassLoader();
        ImageIcon image = new ImageIcon(classLoader.getResource("Images/white.jpg"));
        Icon icon = new ImageIcon(image.getImage().getScaledInstance(backgroundLabel.getWidth(), backgroundLabel.getHeight(), Image.SCALE_DEFAULT));
        backgroundLabel.setIcon(icon);
    }
    
    
     private void showTable()
    {
        
        Connection con = null;
        boolean flag=false;
        try{
            
            String[] titulos = {"Id","Nombre"};
            model = new DefaultTableModel(null, titulos);
            String datos[] = new String[2];
            con = SQLConnection.getSQLConnection();
            PreparedStatement ps = (PreparedStatement) con.prepareStatement("SELECT Id,Nombre From datos WHERE 1");
            //ps.setString(1, consul.getNombre());
            
            
            rs = ps.executeQuery();
            
            while(rs.next()){
                datos[0]=rs.getString("Id");
                datos[1]=rs.getString("Nombre");
                
                model.addRow(datos);
                
            }
            datosGeneralesTable.setModel(model);
            datosGeneralesTable.setDefaultEditor(Object.class, null);
            datosGeneralesTable.setShowVerticalLines(true);


            con.close();
        } catch (SQLException e) {
            System.err.println(e);
        }
        
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popUp = new javax.swing.JPopupMenu();
        datosGenerales = new javax.swing.JMenuItem();
        antecedentes = new javax.swing.JMenuItem();
        examenFisico = new javax.swing.JMenuItem();
        examenNeurologico = new javax.swing.JMenuItem();
        evolucion = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        datosGeneralesTable = new javax.swing.JTable();
        regresarButton = new javax.swing.JButton();
        eliminarButton = new javax.swing.JButton();
        nombreLabel = new javax.swing.JLabel();
        nombreTF = new javax.swing.JTextField();
        backgroundLabel = new javax.swing.JLabel();

        datosGenerales.setText("Datos generales");
        datosGenerales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                datosGeneralesActionPerformed(evt);
            }
        });
        popUp.add(datosGenerales);

        antecedentes.setText("Antecedentes");
        antecedentes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                antecedentesActionPerformed(evt);
            }
        });
        popUp.add(antecedentes);

        examenFisico.setText("Examen físico");
        examenFisico.setToolTipText("");
        examenFisico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                examenFisicoActionPerformed(evt);
            }
        });
        popUp.add(examenFisico);

        examenNeurologico.setText("Examen neurológico");
        examenNeurologico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                examenNeurologicoActionPerformed(evt);
            }
        });
        popUp.add(examenNeurologico);

        evolucion.setText("Evolucion");
        evolucion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                evolucionActionPerformed(evt);
            }
        });
        popUp.add(evolucion);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        datosGeneralesTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        datosGeneralesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Nombre", "Fecha", "Edad", "Sexo", "Telefono", "Correo", "Domicilio", "Motivo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        datosGeneralesTable.setComponentPopupMenu(popUp);
        datosGeneralesTable.getTableHeader().setReorderingAllowed(false);
        datosGeneralesTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                datosGeneralesTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(datosGeneralesTable);
        if (datosGeneralesTable.getColumnModel().getColumnCount() > 0) {
            datosGeneralesTable.getColumnModel().getColumn(0).setResizable(false);
            datosGeneralesTable.getColumnModel().getColumn(1).setResizable(false);
            datosGeneralesTable.getColumnModel().getColumn(2).setResizable(false);
            datosGeneralesTable.getColumnModel().getColumn(3).setResizable(false);
            datosGeneralesTable.getColumnModel().getColumn(4).setResizable(false);
            datosGeneralesTable.getColumnModel().getColumn(5).setResizable(false);
            datosGeneralesTable.getColumnModel().getColumn(6).setResizable(false);
            datosGeneralesTable.getColumnModel().getColumn(7).setResizable(false);
            datosGeneralesTable.getColumnModel().getColumn(8).setResizable(false);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 557, 136));

        regresarButton.setText("Regresar");
        regresarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regresarButtonActionPerformed(evt);
            }
        });
        getContentPane().add(regresarButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(102, 264, -1, -1));

        eliminarButton.setText("Eliminar");
        eliminarButton.setEnabled(false);
        eliminarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarButtonActionPerformed(evt);
            }
        });
        getContentPane().add(eliminarButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(396, 264, -1, -1));

        nombreLabel.setText("Buscar por nombre:");
        getContentPane().add(nombreLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 20, 130, 30));

        nombreTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nombreTFKeyReleased(evt);
            }
        });
        getContentPane().add(nombreTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 22, 140, -1));

        backgroundLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/white.jpg"))); // NOI18N
        getContentPane().add(backgroundLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 300));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void regresarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regresarButtonActionPerformed
        Admin.openMenu();
        dispose();
    }//GEN-LAST:event_regresarButtonActionPerformed

    private void enableEliminarButton()
    {
        boolean flag=false;
        for(int i=0; i<datosGeneralesTable.getRowCount(); i++)
        {
            if(datosGeneralesTable.isRowSelected(i))
            {
                flag = true;
            }
        }
        if(flag == true)
        {
            eliminarButton.setEnabled(true);
        }
        else
        {
            eliminarButton.setEnabled(false);
        }
    }
    
    private void eliminarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarButtonActionPerformed

        int selectedRow = datosGeneralesTable.getSelectedRow();
        String nombre = datosGeneralesTable.getValueAt(selectedRow,1).toString();
        String id = datosGeneralesTable.getValueAt(selectedRow,0).toString();
        int dialogButton = JOptionPane.showConfirmDialog(null, "¿Seguro que desea eliminar a "+nombre+"?", "Advertencia", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
        if(dialogButton == JOptionPane.YES_OPTION)
        {
        Connection con;
        try {
            int selectedRowIndex = datosGeneralesTable.getSelectedRow();
            con = SQLConnection.getSQLConnection();
            PreparedStatement ps = (PreparedStatement) con.prepareStatement("DELETE FROM Datos WHERE Datos.Id = ?");
            ps.setString(1, id);
            int res = ps.executeUpdate();
            if(res>0)
            {
                JOptionPane.showMessageDialog(null, "Paciente eliminado con exito");
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Error al eliminar al paciente");
            }
            model.removeRow(selectedRowIndex);
            datosGeneralesTable.setModel(model);
            con.close();
        } catch (SQLException ex) {
            Logger.getLogger(TodosPacientes.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        }
    }//GEN-LAST:event_eliminarButtonActionPerformed

    
  
    
    
     class listener extends MouseAdapter{
        public void mouseClicked(MouseEvent evt) {
        JTable table = ((JTableHeader) evt.getSource()).getTable();
        TableColumnModel colModel = table.getColumnModel();
        int index = colModel.getColumnIndexAtX(evt.getX());
        setIndex(index);
        order();
        }

     }
    
     
      private void order()
     {
        Connection con = null;
        boolean flag=false;
        try{
            String[] titulos = {"Id","Nombre"};
            model = new DefaultTableModel(null, titulos);
            String datos[] = new String[2];
            con = SQLConnection.getSQLConnection();
            String ordered = datosGeneralesTable.getColumnName(getIndex());
            System.out.println("Se ordenara por: "+ordered);
            PreparedStatement ps = (PreparedStatement) con.prepareStatement("SELECT Id,Nombre From datos WHERE 1 ORDER BY ?");
            ps.setInt(1, getIndex()+1);
            
            rs = ps.executeQuery();
            
            while(rs.next()){
                datos[0]=rs.getString("Id");
                datos[1]=rs.getString("Nombre");
                
                model.addRow(datos);
                
            }
            datosGeneralesTable.setModel(model);
            datosGeneralesTable.setDefaultEditor(Object.class, null);

            
            /*if(flag == false)
            {
                JOptionPane.showMessageDialog(null, "No se encontró al paciente");
            }*/
           
            con.close();
        } catch (SQLException e) {
            System.err.println(e);
        }
     }
     
     
    
    private void datosGeneralesTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_datosGeneralesTableMouseClicked
        enableEliminarButton();
        for(int i=0; i<datosGeneralesTable.getRowCount(); i++)
        {
            if(datosGeneralesTable.isRowSelected(i));
        }
    }//GEN-LAST:event_datosGeneralesTableMouseClicked

    private void nombreTFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nombreTFKeyReleased
        int i=0;
        boolean flag=false;
        for(i=0; i<datosGeneralesTable.getRowCount(); i++)
        {
            //System.out.println("El valor de la tabla es: "+datosGeneralesTable.getValueAt(i,0).toString());
            //System.out.println(nombreTF.getText());
            if(nombreTF.getText().length() <= datosGeneralesTable.getValueAt(i,1).toString().length())
            {
                flag = true;
            for(int j=0; j<nombreTF.getText().length(); j++)
            {
                
                if(nombreTF.getText().toLowerCase().charAt(j) != datosGeneralesTable.getValueAt(i, 1).toString().toLowerCase().charAt(j))
                {
                    flag = false;
                }
            }
            }
            if(flag == true)
            {
                break;
            }
        }
        datosGeneralesTable.scrollRectToVisible(datosGeneralesTable.getCellRect(i, 0, true));
        if(flag == true)
            datosGeneralesTable.setRowSelectionInterval(i, i);
        else
        {
            datosGeneralesTable.getSelectionModel().clearSelection();
        }
        if(nombreTF.getText().length() == 0)
        {
            datosGeneralesTable.getSelectionModel().clearSelection();
        }
        enableEliminarButton();
    }//GEN-LAST:event_nombreTFKeyReleased

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        //listener();
    }//GEN-LAST:event_formMouseClicked

    private void examenFisicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_examenFisicoActionPerformed
        id = (String) datosGeneralesTable.getValueAt(datosGeneralesTable.getSelectedRow(),0);
        Admin.openConsuExaFi();
        dispose();
    }//GEN-LAST:event_examenFisicoActionPerformed

    private void antecedentesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_antecedentesActionPerformed
        id = (String) datosGeneralesTable.getValueAt(datosGeneralesTable.getSelectedRow(),0);
        Admin.openConsultAntecedentes();
        dispose();
    }//GEN-LAST:event_antecedentesActionPerformed

    private void examenNeurologicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_examenNeurologicoActionPerformed
        id = (String) datosGeneralesTable.getValueAt(datosGeneralesTable.getSelectedRow(),0);
        Admin.openConsuExaNe();
        dispose();
    }//GEN-LAST:event_examenNeurologicoActionPerformed

    private void datosGeneralesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_datosGeneralesActionPerformed
        id = (String) datosGeneralesTable.getValueAt(datosGeneralesTable.getSelectedRow(),0);
        Admin.openDatosConsult();
        dispose();
    }//GEN-LAST:event_datosGeneralesActionPerformed

    private void evolucionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_evolucionActionPerformed
        id = (String) datosGeneralesTable.getValueAt(datosGeneralesTable.getSelectedRow(),0);
        Admin.openEvoConsult();
        dispose();
    }//GEN-LAST:event_evolucionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TodosPacientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TodosPacientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TodosPacientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TodosPacientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TodosPacientes().setVisible(true);
            }
        });
    }
    
    
    public class TableMouseListener extends MouseAdapter {
     
    private JTable table;
     
    public TableMouseListener(JTable table) {
        this.table = table;
    }
     
    @Override
    public void mousePressed(MouseEvent event) {
        // selects the row at which point the mouse is clicked
        Point point = event.getPoint();
        int currentRow = table.rowAtPoint(point);
        table.setRowSelectionInterval(currentRow, currentRow);
    }
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem antecedentes;
    private javax.swing.JLabel backgroundLabel;
    private javax.swing.JMenuItem datosGenerales;
    private javax.swing.JTable datosGeneralesTable;
    private javax.swing.JButton eliminarButton;
    private javax.swing.JMenuItem evolucion;
    private javax.swing.JMenuItem examenFisico;
    private javax.swing.JMenuItem examenNeurologico;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel nombreLabel;
    private javax.swing.JTextField nombreTF;
    private javax.swing.JPopupMenu popUp;
    private javax.swing.JButton regresarButton;
    // End of variables declaration//GEN-END:variables
}
