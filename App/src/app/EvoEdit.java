/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package app;

import Management.Admin;
import Management.Messages;
import Management.SQLConnection;
import Management.SQLStatements;
import com.mysql.jdbc.PreparedStatement;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hp
 */
public class EvoEdit extends javax.swing.JFrame {

    // Creates new form Evolucion
    public EvoEdit() {
        initComponents();
        setDates();
        setImages();
        
        setActionCommands();
        showTable();
        //jTable1.setCellEditor((TableCellEditor) jButton1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bicamsBG = new javax.swing.ButtonGroup();
        qhptBG = new javax.swing.ButtonGroup();
        beckBG = new javax.swing.ButtonGroup();
        raoBG = new javax.swing.ButtonGroup();
        avcBG = new javax.swing.ButtonGroup();
        msqolBG = new javax.swing.ButtonGroup();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        ipLabel = new javax.swing.JLabel();
        evolucionLabel = new javax.swing.JLabel();
        mmseTF = new javax.swing.JFormattedTextField();
        bicamsRB1 = new javax.swing.JRadioButton();
        bicamsRB2 = new javax.swing.JRadioButton();
        qhptRB1 = new javax.swing.JRadioButton();
        qhptRB2 = new javax.swing.JRadioButton();
        beckRB1 = new javax.swing.JRadioButton();
        beckRB2 = new javax.swing.JRadioButton();
        raoRB1 = new javax.swing.JRadioButton();
        raoRB2 = new javax.swing.JRadioButton();
        avcRB1 = new javax.swing.JRadioButton();
        avcRB2 = new javax.swing.JRadioButton();
        msqolRB1 = new javax.swing.JRadioButton();
        msqolRB2 = new javax.swing.JRadioButton();
        fechaLabel = new javax.swing.JLabel();
        guardarButton = new javax.swing.JButton();
        ipTF = new javax.swing.JTextField();
        aniosTF = new javax.swing.JTextField();
        edssTF = new javax.swing.JTextField();
        diaMsqolCB = new javax.swing.JComboBox<>();
        mesMsqolCB = new javax.swing.JComboBox<>();
        anioMsqolCB = new javax.swing.JComboBox<>();
        diaMmseCB = new javax.swing.JComboBox<>();
        mesMmseCB = new javax.swing.JComboBox<>();
        anioMmseCB = new javax.swing.JComboBox<>();
        diaEdssCB = new javax.swing.JComboBox<>();
        mesEdssCB = new javax.swing.JComboBox<>();
        anioEdssCB = new javax.swing.JComboBox<>();
        diaIpCB = new javax.swing.JComboBox<>();
        mesIpCB = new javax.swing.JComboBox<>();
        anioIpCB = new javax.swing.JComboBox<>();
        diaBicamsCB = new javax.swing.JComboBox<>();
        mesBicamsCB = new javax.swing.JComboBox<>();
        anioBicamsCB = new javax.swing.JComboBox<>();
        diaQhptCB = new javax.swing.JComboBox<>();
        mesQhptCB = new javax.swing.JComboBox<>();
        anioQhptCB = new javax.swing.JComboBox<>();
        diaBeckCB = new javax.swing.JComboBox<>();
        mesBeckCB = new javax.swing.JComboBox<>();
        anioBeckCB = new javax.swing.JComboBox<>();
        diaRaoCB = new javax.swing.JComboBox<>();
        mesRaoCB = new javax.swing.JComboBox<>();
        anioRaoCB = new javax.swing.JComboBox<>();
        diaAvcCB = new javax.swing.JComboBox<>();
        mesAvcCB = new javax.swing.JComboBox<>();
        anioAvcCB = new javax.swing.JComboBox<>();
        mmseLabel = new javax.swing.JLabel();
        msqolLabel = new javax.swing.JLabel();
        edssLabel = new javax.swing.JLabel();
        aniosLabel = new javax.swing.JLabel();
        bicamsLabel = new javax.swing.JLabel();
        qhptLabel = new javax.swing.JLabel();
        beckLabel = new javax.swing.JLabel();
        raoLabel = new javax.swing.JLabel();
        avcLabel = new javax.swing.JLabel();
        regresarButton = new javax.swing.JButton();
        backgroundLabel = new javax.swing.JLabel();

        jFormattedTextField1.setText("jFormattedTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ipLabel.setText("IP:");
        getContentPane().add(ipLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 130, 40, 30));

        evolucionLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        evolucionLabel.setText("EVOLUCIÃ“N");
        getContentPane().add(evolucionLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 9, 89, -1));

        try {
            mmseTF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        mmseTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                mmseTFKeyReleased(evt);
            }
        });
        getContentPane().add(mmseTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 50, 74, -1));

        bicamsBG.add(bicamsRB1);
        bicamsRB1.setText("Normal");
        getContentPane().add(bicamsRB1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 170, 70, 30));

        bicamsBG.add(bicamsRB2);
        bicamsRB2.setText("Anormal");
        getContentPane().add(bicamsRB2, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 170, -1, 30));

        qhptBG.add(qhptRB1);
        qhptRB1.setText("Normal");
        getContentPane().add(qhptRB1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 210, 70, 30));

        qhptBG.add(qhptRB2);
        qhptRB2.setText("Anormal");
        getContentPane().add(qhptRB2, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 210, -1, 30));

        beckBG.add(beckRB1);
        beckRB1.setText("Normal");
        getContentPane().add(beckRB1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 250, 70, 30));

        beckBG.add(beckRB2);
        beckRB2.setText("Anormal");
        getContentPane().add(beckRB2, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 250, -1, 30));

        raoBG.add(raoRB1);
        raoRB1.setText("Normal");
        getContentPane().add(raoRB1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 290, 70, 30));

        raoBG.add(raoRB2);
        raoRB2.setText("Anormal");
        getContentPane().add(raoRB2, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 290, 70, 30));

        avcBG.add(avcRB1);
        avcRB1.setText("Normal");
        getContentPane().add(avcRB1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 330, 70, 30));

        avcBG.add(avcRB2);
        avcRB2.setText("Anormal");
        getContentPane().add(avcRB2, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 330, 70, 30));

        msqolBG.add(msqolRB1);
        msqolRB1.setText("Normal");
        getContentPane().add(msqolRB1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 370, 70, 30));

        msqolBG.add(msqolRB2);
        msqolRB2.setText("Anormal");
        getContentPane().add(msqolRB2, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 370, 70, 30));

        fechaLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        fechaLabel.setText("FECHA");
        getContentPane().add(fechaLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 9, -1, -1));

        guardarButton.setText("Guardar");
        guardarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarButtonActionPerformed(evt);
            }
        });
        getContentPane().add(guardarButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 420, -1, -1));

        ipTF.setEditable(false);
        ipTF.setBackground(new java.awt.Color(204, 204, 204));
        ipTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ipTFActionPerformed(evt);
            }
        });
        getContentPane().add(ipTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 130, 50, -1));

        aniosTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                aniosTFKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                aniosTFKeyTyped(evt);
            }
        });
        getContentPane().add(aniosTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 130, 70, -1));

        edssTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                edssTFKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                edssTFKeyTyped(evt);
            }
        });
        getContentPane().add(edssTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 90, 70, -1));

        getContentPane().add(diaMsqolCB, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 370, -1, -1));

        mesMsqolCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ene", "feb", "mar", "abr", "may", "jun", "jul", "ago", "sep", "oct", "nov", "dic" }));
        getContentPane().add(mesMsqolCB, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 370, -1, -1));

        getContentPane().add(anioMsqolCB, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 370, -1, -1));

        getContentPane().add(diaMmseCB, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, -1));

        mesMmseCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ene", "feb", "mar", "abr", "may", "jun", "jul", "ago", "sep", "oct", "nov", "dic" }));
        getContentPane().add(mesMmseCB, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 50, -1, -1));

        getContentPane().add(anioMmseCB, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 50, -1, -1));

        getContentPane().add(diaEdssCB, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, -1, -1));

        mesEdssCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ene", "feb", "mar", "abr", "may", "jun", "jul", "ago", "sep", "oct", "nov", "dic" }));
        getContentPane().add(mesEdssCB, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 90, -1, -1));

        getContentPane().add(anioEdssCB, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 90, -1, -1));

        getContentPane().add(diaIpCB, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, -1, -1));

        mesIpCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ene", "feb", "mar", "abr", "may", "jun", "jul", "ago", "sep", "oct", "nov", "dic" }));
        getContentPane().add(mesIpCB, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 130, -1, -1));

        getContentPane().add(anioIpCB, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 130, -1, -1));

        getContentPane().add(diaBicamsCB, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, -1, -1));

        mesBicamsCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ene", "feb", "mar", "abr", "may", "jun", "jul", "ago", "sep", "oct", "nov", "dic" }));
        getContentPane().add(mesBicamsCB, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 170, -1, -1));

        getContentPane().add(anioBicamsCB, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 170, -1, -1));

        getContentPane().add(diaQhptCB, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, -1, -1));

        mesQhptCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ene", "feb", "mar", "abr", "may", "jun", "jul", "ago", "sep", "oct", "nov", "dic" }));
        getContentPane().add(mesQhptCB, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 210, -1, -1));

        getContentPane().add(anioQhptCB, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 210, -1, -1));

        getContentPane().add(diaBeckCB, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, -1, -1));

        mesBeckCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ene", "feb", "mar", "abr", "may", "jun", "jul", "ago", "sep", "oct", "nov", "dic" }));
        getContentPane().add(mesBeckCB, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 250, -1, -1));

        getContentPane().add(anioBeckCB, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 250, -1, -1));

        getContentPane().add(diaRaoCB, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 290, -1, -1));

        mesRaoCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ene", "feb", "mar", "abr", "may", "jun", "jul", "ago", "sep", "oct", "nov", "dic" }));
        getContentPane().add(mesRaoCB, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 290, -1, -1));

        getContentPane().add(anioRaoCB, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 290, -1, -1));

        getContentPane().add(diaAvcCB, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, -1, -1));

        mesAvcCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ene", "feb", "mar", "abr", "may", "jun", "jul", "ago", "sep", "oct", "nov", "dic" }));
        getContentPane().add(mesAvcCB, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 330, -1, -1));

        getContentPane().add(anioAvcCB, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 330, -1, -1));

        mmseLabel.setText("MMSE:");
        getContentPane().add(mmseLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 50, 40, 30));

        msqolLabel.setText("MSQOL:");
        getContentPane().add(msqolLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 370, 50, 30));

        edssLabel.setText("EDSS:");
        getContentPane().add(edssLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 90, 40, 30));

        aniosLabel.setText("AÃ‘OS:");
        getContentPane().add(aniosLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 130, 40, 30));

        bicamsLabel.setText("BICAMS:");
        getContentPane().add(bicamsLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 170, 50, 30));

        qhptLabel.setText("QHPT:");
        getContentPane().add(qhptLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 210, 50, 30));

        beckLabel.setText("BECK:");
        getContentPane().add(beckLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 250, 50, 30));

        raoLabel.setText("RAO:");
        getContentPane().add(raoLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 290, 50, 30));

        avcLabel.setText("AVC:");
        getContentPane().add(avcLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 330, 50, 30));

        regresarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/backImage.png"))); // NOI18N
        regresarButton.setBorderPainted(false);
        regresarButton.setContentAreaFilled(false);
        regresarButton.setFocusPainted(false);
        regresarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regresarButtonActionPerformed(evt);
            }
        });
        getContentPane().add(regresarButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 420, 70, 30));
        getContentPane().add(backgroundLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 480, 460));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
 
    private static String mmse;
    private static String edss;
    private static String ip;
    private static String bicams;
    private static String qhpt;
    private static String beck;
    private static String rao;
    private static String avc;
    private static String msqol;
    
    private static String mmseFecha;
    private static String edssFecha;
    private static String ipFecha;
    private static String bicamsFecha;
    private static String qhptFecha;
    private static String beckFecha;
    private static String raoFecha;
    private static String avcFecha;
    private static String msqolFecha;
    
    public static String getMmse() { return mmse; }
    public static String getEdss() { return edss; }
    public static String getIp() { return ip; }
    public static String getBicams() { return bicams; }
    public static String getQhpt() { return qhpt; }
    public static String getBeck() { return beck; }
    public static String getRao() { return rao; }
    public static String getAvc() { return avc; }
    public static String getMsqol() { return msqol; }
    
    public static String getMmseFecha() { return mmseFecha; }
    public static String getEdssFecha() { return edssFecha; }
    public static String getIpFecha() { return ipFecha; }
    public static String getBicamsFecha() { return bicamsFecha; }
    public static String getQhptFecha() { return qhptFecha; }
    public static String getBeckFecha() { return beckFecha; }
    public static String getRaoFecha() { return raoFecha; }
    public static String getAvcFecha() { return avcFecha; }
    public static String getMsqolFecha() { return msqolFecha; }
    
    private void setImages()
    {
        ClassLoader classLoader = this.getClass().getClassLoader();
        
        ImageIcon image = new ImageIcon(classLoader.getResource("Images/white.jpg"));
        Icon icon = new ImageIcon(image.getImage().getScaledInstance(backgroundLabel.getWidth(), backgroundLabel.getHeight(), Image.SCALE_DEFAULT));
        backgroundLabel.setIcon(icon);
        
        image = new ImageIcon(classLoader.getResource("Images/backImage.png"));
        icon = new ImageIcon(image.getImage().getScaledInstance(regresarButton.getWidth(), regresarButton.getHeight(), Image.SCALE_DEFAULT));
        regresarButton.setIcon(icon);
        
        image = new ImageIcon(classLoader.getResource("Images/disqueteImage.png"));
        icon = new ImageIcon(image.getImage().getScaledInstance(regresarButton.getWidth()-23, regresarButton.getHeight()-12, Image.SCALE_DEFAULT));
        guardarButton.setIcon(icon);
    }
    
    
    private void showTable()
    {
        TodosPacientes tP = new TodosPacientes();
        Connection con = null;
        DefaultTableModel model;
        String datos[] = new String[9];
        ResultSet rs, rs2;
        try{
            String[] titulos = {"Title 1","Title 2"};
            model = new DefaultTableModel(null, titulos);
            
            con = SQLConnection.getSQLConnection();
            PreparedStatement ps = (PreparedStatement) con.prepareStatement("SELECT datos.Nombre,evolucion.* from datos INNER JOIN evolucion ON evolucion.Id_evolucion = datos.Id WHERE datos.Id = ?");
            PreparedStatement qs = (PreparedStatement) con.prepareStatement("SELECT datos.Nombre,evolucion_fecha.* from datos INNER JOIN evolucion_fecha ON evolucion_fecha.Id_EF = datos.Id WHERE datos.Id = ?");
            qs.setString(1, tP.getID());
            ps.setString(1, tP.getID());
            
            rs = ps.executeQuery();
            
            while(rs.next()){
                mmseTF.setText(rs.getString("MMSE"));
                edssTF.setText(rs.getString("EDSS"));
                ipTF.setText(rs.getString("IP"));
                if(rs.getString("BICAMS").equals("Normal"))
                    bicamsRB1.setSelected(true);
                else
                    bicamsRB2.setSelected(true);
                if(rs.getString("QHPT").equals("Normal"))
                    qhptRB1.setSelected(true);
                else
                    qhptRB2.setSelected(true);
                if(rs.getString("BECK").equals("Normal"))
                    beckRB1.setSelected(true);
                else
                    beckRB2.setSelected(true);
                if(rs.getString("RAO").equals("Normal"))
                    raoRB1.setSelected(true);
                else
                    raoRB2.setSelected(true);
                if(rs.getString("AVC").equals("Normal"))
                    avcRB1.setSelected(true);
                else
                    avcRB2.setSelected(true);
                if(rs.getString("MSQOL").equals("Normal"))
                    msqolRB1.setSelected(true);
                else
                    msqolRB2.setSelected(true);  
            }
            
            rs2 = qs.executeQuery();
                   
            while(rs2.next())
            {
                datos[0] = rs2.getString("mmseFecha");
                datos[1] = rs2.getString("edssFecha");
                datos[2] = rs2.getString("ipFecha");
                datos[3] = rs2.getString("bicamsFecha");
                datos[4] = rs2.getString("qhptFecha");
                datos[5] = rs2.getString("beckFecha");
                datos[6] = rs2.getString("raoFecha");
                datos[7] = rs2.getString("avcFecha");
                datos[8] = rs2.getString("msqolFecha");
            }
            
            con.close();
            
            
            
        } catch (SQLException e) {
            System.err.println(e);
        }
        recoverDate(datos[0],diaMmseCB,mesMmseCB,anioMmseCB);
        recoverDate(datos[1],diaEdssCB,mesEdssCB,anioEdssCB);
        recoverDate(datos[2],diaIpCB,mesIpCB,anioIpCB);
        
        recoverDate(datos[3],diaBicamsCB,mesBicamsCB,anioBicamsCB);
        recoverDate(datos[4],diaQhptCB,mesQhptCB,anioQhptCB);
        recoverDate(datos[5],diaBeckCB,mesBeckCB,anioBeckCB);
        recoverDate(datos[6],diaRaoCB,mesRaoCB,anioRaoCB);
        recoverDate(datos[7],diaAvcCB,mesAvcCB,anioAvcCB);
        recoverDate(datos[8],diaMsqolCB,mesMsqolCB,anioMsqolCB);
        
        float division = Float.parseFloat(edssTF.getText())/Float.parseFloat(ipTF.getText());
        int lastDivision = (int) division;
        aniosTF.setText(String.valueOf(lastDivision));
        
    }
 
    
    private void recoverDate(String data, JComboBox day, JComboBox month, JComboBox year)
    {
        String anio="",mes="",dia="";
        int counter = 0;
        for(int i=0; i<data.length() && data.charAt(i) != '-'; i++)
        {
            anio = anio + data.charAt(i);
            counter++;
        }
        counter++;
        for(int i=counter; i<data.length() && data.charAt(i) != '-'; i++)
        {
            mes = mes + data.charAt(i);
            counter++;
        }
        counter++;
        for(int i=counter; i<data.length(); i++)
        {
            dia = dia + data.charAt(i);
        }
        year.setSelectedItem(anio);
        if(mes.charAt(0) == '0');
        {
            mes = String.valueOf(mes.charAt(1));
        }
        if(dia.charAt(0) == '0')
        {
            dia = String.valueOf(dia.charAt(1));
        }
        month.setSelectedIndex(Integer.parseInt(mes)-1);
        day.setSelectedIndex(Integer.parseInt(dia)-1);
    }
    
    
    private void setDates()
    {
        for(int i=1; i<32; i++)
        {
            diaMmseCB.addItem(String.valueOf(i));
            diaEdssCB.addItem(String.valueOf(i));
            diaIpCB.addItem(String.valueOf(i));
            diaBicamsCB.addItem(String.valueOf(i));
            diaQhptCB.addItem(String.valueOf(i));
            diaBeckCB.addItem(String.valueOf(i));
            diaRaoCB.addItem(String.valueOf(i));
            diaAvcCB.addItem(String.valueOf(i));
            diaMsqolCB.addItem(String.valueOf(i));
        }
        for(int i=2019; i>1909; i--)
        {
            anioMmseCB.addItem(String.valueOf(i));
            anioEdssCB.addItem(String.valueOf(i));
            anioIpCB.addItem(String.valueOf(i));
            anioBicamsCB.addItem(String.valueOf(i));
            anioQhptCB.addItem(String.valueOf(i));
            anioBeckCB.addItem(String.valueOf(i));
            anioRaoCB.addItem(String.valueOf(i));
            anioAvcCB.addItem(String.valueOf(i));
            anioMsqolCB.addItem(String.valueOf(i));
        }
    }
    
    private void setActionCommands()
    {
        bicamsRB1.setActionCommand("Normal");
        bicamsRB2.setActionCommand("Anormal");
        qhptRB1.setActionCommand("Normal");
        qhptRB2.setActionCommand("Anormal");
        beckRB1.setActionCommand("Normal");
        beckRB2.setActionCommand("Anormal");
        raoRB1.setActionCommand("Normal");
        raoRB2.setActionCommand("Anormal");
        avcRB1.setActionCommand("Normal");
        avcRB2.setActionCommand("Anormal");
        msqolRB1.setActionCommand("Normal");
        msqolRB2.setActionCommand("Anormal"); 
    }
    
    private void setGetters()
    {
        
        mmse = mmseTF.getText();
        edss = edssTF.getText();
        ip = ipTF.getText();
        bicams = bicamsBG.getSelection().getActionCommand();
        qhpt = qhptBG.getSelection().getActionCommand();
        beck = beckBG.getSelection().getActionCommand();
        rao = raoBG.getSelection().getActionCommand();
        avc = avcBG.getSelection().getActionCommand();
        msqol = msqolBG.getSelection().getActionCommand();
        
        mmseFecha = dateToString(diaMmseCB,mesMmseCB,anioMmseCB);
        edssFecha = dateToString(diaEdssCB,mesEdssCB,anioEdssCB);
        ipFecha = dateToString(diaIpCB,mesIpCB,anioIpCB);
        bicamsFecha = dateToString(diaBicamsCB,mesBicamsCB,anioBicamsCB);
        qhptFecha = dateToString(diaQhptCB,mesQhptCB,anioQhptCB);
        beckFecha = dateToString(diaBeckCB,mesBeckCB,anioBeckCB);
        raoFecha = dateToString(diaRaoCB,mesRaoCB,anioRaoCB);
        avcFecha = dateToString(diaAvcCB,mesAvcCB,anioAvcCB);
        msqolFecha = dateToString(diaMsqolCB,mesMsqolCB,anioMsqolCB);
                
    }
    
    private String dateToString(JComboBox dayCB, JComboBox monthCB, JComboBox yearCB)
    {
        String month;
        String day;
        
        //Para agregarle el 0 y que se pueda guardar en la base de datos
        if(monthCB.getSelectedIndex()+1<10){
            month = "0"+String.valueOf(monthCB.getSelectedIndex()+1);
        }
        else
        {
            month = String.valueOf(monthCB.getSelectedIndex()+1);
        }
        if(dayCB.getSelectedIndex()+1<10)
        {
            day = "0"+dayCB.getSelectedItem();
        }
        else
        {
            day = (String) dayCB.getSelectedItem();
        }
        return yearCB.getSelectedItem()+"-"+month+"-"+day;
    }
    
    
    
    private void avoidLetters(KeyEvent evt, JTextField tf)
    {
        char validar = evt.getKeyChar();
        
        if(!Character.isDigit(validar) || tf.getText().length()>1)
        {
            //getToolkit().beep();
            evt.consume();
        }
    }
    
    private void mmseTFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mmseTFKeyReleased
        //System.out.println(mmseFecha.getText());
    }//GEN-LAST:event_mmseTFKeyReleased

    
    
    
    
    private void guardarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarButtonActionPerformed

        
        setGetters();
        Messages message = new Messages();
        String table = "evolucion";
        String table2 = "evolucion_fecha";
        String[] values = new String[] {
            mmse,edss,ip,bicams,qhpt,beck,rao,avc,msqol
        };
        String[] values2 = new String[] {
            mmseFecha,edssFecha,ipFecha,bicamsFecha,qhptFecha,beckFecha,raoFecha,avcFecha,msqolFecha  
        };
        SQLStatements statement = new SQLStatements();
        if(statement.update(table,values) && statement.update(table2,values2))
            message.informationMessage("Datos actualizados", "Datos actualizados con Ã©xito");
        else
            message.errorMesage("Error", "Ha ocurrido un error al actualizar los datos");
        Admin.openEvoConsult();
        dispose();
           
        
    }//GEN-LAST:event_guardarButtonActionPerformed

    private void aniosTFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_aniosTFKeyReleased
        if(aniosTF.getText().length()>0 && edssTF.getText().length()>0)
        {
            //int division = Integer.parseInt(edssTF.getText())/Integer.parseInt(aniosTF.getText());
            float division = Float.parseFloat(edssTF.getText())/Float.parseFloat(aniosTF.getText());
            boolean flag = false;
            String divisionS = String.valueOf(division);
            String impresion = "";
            int j=0;
            for(int i=0; i<divisionS.length(); i++)
            {
                if(divisionS.charAt(i) == '.')
                {
                    flag = true;
                }
                if(j<3)
                    impresion+=divisionS.charAt(i);
                if(flag == true)
                    j++;
            }
            ipTF.setText(impresion);
            //ipTF.setText(String.valueOf(division));
        }
        else
        {
            ipTF.setText("");
        }
    }//GEN-LAST:event_aniosTFKeyReleased

    private void aniosTFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_aniosTFKeyTyped
        avoidLetters(evt,aniosTF);
    }//GEN-LAST:event_aniosTFKeyTyped

    private void edssTFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_edssTFKeyReleased
        if(aniosTF.getText().length()>0 && edssTF.getText().length()>0)
        {
            /*int division = Integer.parseInt(edssTF.getText())/Integer.parseInt(aniosTF.getText());
            ipTF.setText(String.valueOf(division));*/
            float division = Float.parseFloat(edssTF.getText())/Float.parseFloat(aniosTF.getText());
            boolean flag = false;
            String divisionS = String.valueOf(division);
            String impresion = "";
            int j=0;
            for(int i=0; i<divisionS.length(); i++)
            {
                if(divisionS.charAt(i) == '.')
                {
                    flag = true;
                }
                if(j<3)
                    impresion+=divisionS.charAt(i);
                if(flag == true)
                    j++;
            }
            ipTF.setText(impresion);
        }
        else
        {
            ipTF.setText("");
        }
    }//GEN-LAST:event_edssTFKeyReleased

    private void edssTFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_edssTFKeyTyped
        avoidLetters(evt,edssTF);
    }//GEN-LAST:event_edssTFKeyTyped

    private void regresarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regresarButtonActionPerformed
        Admin.openEvoConsult();
        dispose();
    }//GEN-LAST:event_regresarButtonActionPerformed

    private void ipTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ipTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ipTFActionPerformed

    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EvoEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EvoEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EvoEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EvoEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EvoEdit().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> anioAvcCB;
    private javax.swing.JComboBox<String> anioBeckCB;
    private javax.swing.JComboBox<String> anioBicamsCB;
    private javax.swing.JComboBox<String> anioEdssCB;
    private javax.swing.JComboBox<String> anioIpCB;
    private javax.swing.JComboBox<String> anioMmseCB;
    private javax.swing.JComboBox<String> anioMsqolCB;
    private javax.swing.JComboBox<String> anioQhptCB;
    private javax.swing.JComboBox<String> anioRaoCB;
    private javax.swing.JLabel aniosLabel;
    private javax.swing.JTextField aniosTF;
    private javax.swing.ButtonGroup avcBG;
    private javax.swing.JLabel avcLabel;
    private javax.swing.JRadioButton avcRB1;
    private javax.swing.JRadioButton avcRB2;
    private javax.swing.JLabel backgroundLabel;
    private javax.swing.ButtonGroup beckBG;
    private javax.swing.JLabel beckLabel;
    private javax.swing.JRadioButton beckRB1;
    private javax.swing.JRadioButton beckRB2;
    private javax.swing.ButtonGroup bicamsBG;
    private javax.swing.JLabel bicamsLabel;
    private javax.swing.JRadioButton bicamsRB1;
    private javax.swing.JRadioButton bicamsRB2;
    private javax.swing.JComboBox<String> diaAvcCB;
    private javax.swing.JComboBox<String> diaBeckCB;
    private javax.swing.JComboBox<String> diaBicamsCB;
    private javax.swing.JComboBox<String> diaEdssCB;
    private javax.swing.JComboBox<String> diaIpCB;
    private javax.swing.JComboBox<String> diaMmseCB;
    private javax.swing.JComboBox<String> diaMsqolCB;
    private javax.swing.JComboBox<String> diaQhptCB;
    private javax.swing.JComboBox<String> diaRaoCB;
    private javax.swing.JLabel edssLabel;
    private javax.swing.JTextField edssTF;
    private javax.swing.JLabel evolucionLabel;
    private javax.swing.JLabel fechaLabel;
    private javax.swing.JButton guardarButton;
    private javax.swing.JLabel ipLabel;
    private javax.swing.JTextField ipTF;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JComboBox<String> mesAvcCB;
    private javax.swing.JComboBox<String> mesBeckCB;
    private javax.swing.JComboBox<String> mesBicamsCB;
    private javax.swing.JComboBox<String> mesEdssCB;
    private javax.swing.JComboBox<String> mesIpCB;
    private javax.swing.JComboBox<String> mesMmseCB;
    private javax.swing.JComboBox<String> mesMsqolCB;
    private javax.swing.JComboBox<String> mesQhptCB;
    private javax.swing.JComboBox<String> mesRaoCB;
    private javax.swing.JLabel mmseLabel;
    private javax.swing.JFormattedTextField mmseTF;
    private javax.swing.ButtonGroup msqolBG;
    private javax.swing.JLabel msqolLabel;
    private javax.swing.JRadioButton msqolRB1;
    private javax.swing.JRadioButton msqolRB2;
    private javax.swing.ButtonGroup qhptBG;
    private javax.swing.JLabel qhptLabel;
    private javax.swing.JRadioButton qhptRB1;
    private javax.swing.JRadioButton qhptRB2;
    private javax.swing.ButtonGroup raoBG;
    private javax.swing.JLabel raoLabel;
    private javax.swing.JRadioButton raoRB1;
    private javax.swing.JRadioButton raoRB2;
    private javax.swing.JButton regresarButton;
    // End of variables declaration//GEN-END:variables
}
